// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package edu.brynmawr.cmsc353.webapp;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

public final class CreatePostInput implements InputType {
  private final Input<String> title;

  private final @NotNull String content;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  CreatePostInput(Input<String> title, @NotNull String content) {
    this.title = title;
    this.content = content;
  }

  public @Nullable String title() {
    return this.title.value;
  }

  public @NotNull String content() {
    return this.content;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public InputFieldMarshaller marshaller() {
    return new InputFieldMarshaller() {
      @Override
      public void marshal(InputFieldWriter writer) throws IOException {
        if (title.defined) {
          writer.writeString("title", title.value);
        }
        writer.writeString("content", content);
      }
    };
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= title.hashCode();
      h *= 1000003;
      h ^= content.hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CreatePostInput) {
      CreatePostInput that = (CreatePostInput) o;
      return this.title.equals(that.title)
       && this.content.equals(that.content);
    }
    return false;
  }

  public static final class Builder {
    private Input<String> title = Input.absent();

    private @NotNull String content;

    Builder() {
    }

    public Builder title(@Nullable String title) {
      this.title = Input.fromNullable(title);
      return this;
    }

    public Builder content(@NotNull String content) {
      this.content = content;
      return this;
    }

    public Builder titleInput(@NotNull Input<String> title) {
      this.title = Utils.checkNotNull(title, "title == null");
      return this;
    }

    public CreatePostInput build() {
      Utils.checkNotNull(content, "content == null");
      return new CreatePostInput(title, content);
    }
  }
}
