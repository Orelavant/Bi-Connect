package edu.brynmawr.cmsc353.webapp;// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;
import java.util.Collections;

import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;

public final class IsLoggedInQuery implements Query<IsLoggedInQuery.Data, IsLoggedInQuery.Data, Operation.Variables> {
  public static final String OPERATION_ID = "adf70f8c22ee357c133f94e60643db126973db94e8b077eb72ae78d3d4eed5a3";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query isLoggedIn {\n"
        + "  isLoggedIn {\n"
        + "    __typename\n"
        + "    username\n"
        + "    email\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "isLoggedIn";
    }
  };

  private final Variables variables;

  public IsLoggedInQuery() {
    this.variables = Operation.EMPTY_VARIABLES;
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public Data wrapData(Data data) {
    return data;
  }

  @Override
  public Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final BufferedSource source,
                              @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final ByteString byteString,
                              @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    Builder() {
    }

    public IsLoggedInQuery build() {
      return new IsLoggedInQuery();
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("isLoggedIn", "isLoggedIn", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable IsLoggedIn isLoggedIn;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable IsLoggedIn isLoggedIn) {
      this.isLoggedIn = isLoggedIn;
    }

    public @Nullable IsLoggedIn isLoggedIn() {
      return this.isLoggedIn;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], isLoggedIn != null ? isLoggedIn.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "isLoggedIn=" + isLoggedIn
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.isLoggedIn == null) ? (that.isLoggedIn == null) : this.isLoggedIn.equals(that.isLoggedIn));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (isLoggedIn == null) ? 0 : isLoggedIn.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final IsLoggedIn.Mapper isLoggedInFieldMapper = new IsLoggedIn.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final IsLoggedIn isLoggedIn = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<IsLoggedIn>() {
          @Override
          public IsLoggedIn read(ResponseReader reader) {
            return isLoggedInFieldMapper.map(reader);
          }
        });
        return new Data(isLoggedIn);
      }
    }
  }

  public static class IsLoggedIn {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("username", "username", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("email", "email", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String username;

    final @NotNull String email;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public IsLoggedIn(@NotNull String __typename, @NotNull String username, @NotNull String email) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.username = Utils.checkNotNull(username, "username == null");
      this.email = Utils.checkNotNull(email, "email == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull String username() {
      return this.username;
    }

    public @NotNull String email() {
      return this.email;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], username);
          writer.writeString($responseFields[2], email);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "IsLoggedIn{"
          + "__typename=" + __typename + ", "
          + "username=" + username + ", "
          + "email=" + email
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof IsLoggedIn) {
        IsLoggedIn that = (IsLoggedIn) o;
        return this.__typename.equals(that.__typename)
         && this.username.equals(that.username)
         && this.email.equals(that.email);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= username.hashCode();
        h *= 1000003;
        h ^= email.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<IsLoggedIn> {
      @Override
      public IsLoggedIn map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String username = reader.readString($responseFields[1]);
        final String email = reader.readString($responseFields[2]);
        return new IsLoggedIn(__typename, username, email);
      }
    }
  }
}
