// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package edu.brynmawr.cmsc353.webapp;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

public final class UserIdInput implements InputType {
  private final Input<String> _id;

  private final Input<String> username;

  private final Input<String> email;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  public UserIdInput(Input<String> _id, Input<String> username, Input<String> email) {
    this._id = _id;
    this.username = username;
    this.email = email;
  }

  public @Nullable String _id() {
    return this._id.value;
  }

  public @Nullable String username() {
    return this.username.value;
  }

  public @Nullable String email() {
    return this.email.value;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public InputFieldMarshaller marshaller() {
    return new InputFieldMarshaller() {
      @Override
      public void marshal(InputFieldWriter writer) throws IOException {
        if (_id.defined) {
          writer.writeString("_id", _id.value);
        }
        if (username.defined) {
          writer.writeString("username", username.value);
        }
        if (email.defined) {
          writer.writeString("email", email.value);
        }
      }
    };
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= _id.hashCode();
      h *= 1000003;
      h ^= username.hashCode();
      h *= 1000003;
      h ^= email.hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UserIdInput) {
      UserIdInput that = (UserIdInput) o;
      return this._id.equals(that._id)
       && this.username.equals(that.username)
       && this.email.equals(that.email);
    }
    return false;
  }

  public static final class Builder {
    private Input<String> _id = Input.absent();

    private Input<String> username = Input.absent();

    private Input<String> email = Input.absent();

    Builder() {
    }

    public Builder _id(@Nullable String _id) {
      this._id = Input.fromNullable(_id);
      return this;
    }

    public Builder username(@Nullable String username) {
      this.username = Input.fromNullable(username);
      return this;
    }

    public Builder email(@Nullable String email) {
      this.email = Input.fromNullable(email);
      return this;
    }

    public Builder _idInput(@NotNull Input<String> _id) {
      this._id = Utils.checkNotNull(_id, "_id == null");
      return this;
    }

    public Builder usernameInput(@NotNull Input<String> username) {
      this.username = Utils.checkNotNull(username, "username == null");
      return this;
    }

    public Builder emailInput(@NotNull Input<String> email) {
      this.email = Utils.checkNotNull(email, "email == null");
      return this;
    }

    public UserIdInput build() {
      return new UserIdInput(_id, username, email);
    }
  }
}
